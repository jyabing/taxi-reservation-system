# Generated by Django 4.2.11 on 2025-08-24 08:41

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('carinfo', '0001_initial'),
        ('staffbook', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='DriverDailyReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='日期')),
                ('note', models.TextField(blank=True, verbose_name='备注')),
                ('has_issue', models.BooleanField(default=False, verbose_name='包含异常记录')),
                ('status', models.CharField(choices=[('pending', '待处理'), ('completed', '已完成'), ('cancelled', '已取消')], default='pending', max_length=20, verbose_name='状态')),
                ('clock_in', models.TimeField(blank=True, null=True, verbose_name='出勤时间')),
                ('clock_out', models.TimeField(blank=True, null=True, verbose_name='退勤时间')),
                ('勤務時間', models.DurationField(blank=True, null=True, verbose_name='勤務時間')),
                ('休憩時間', models.DurationField(blank=True, default=datetime.timedelta(seconds=1200), null=True, verbose_name='休憩時間')),
                ('実働時間', models.DurationField(blank=True, null=True, verbose_name='実働時間')),
                ('残業時間', models.DurationField(blank=True, null=True, verbose_name='残業時間')),
                ('deposit_amount', models.PositiveIntegerField(blank=True, help_text='手动输入的入金金额', null=True, verbose_name='入金額')),
                ('deposit_difference', models.IntegerField(blank=True, help_text='入金 − 現金', null=True, verbose_name='過不足額')),
                ('etc_collected', models.PositiveIntegerField(blank=True, help_text='日计账单中“空乘合计”', null=True, verbose_name='ETC收取金额（円）')),
                ('etc_payment_method', models.CharField(blank=True, choices=[('cash', '現金'), ('uber_cash', 'Uber（現金）'), ('uber', 'Uber'), ('didi_cash', 'Didi（現金）'), ('didi', 'Didi'), ('go_cash', 'GO（現金）'), ('go', 'GO'), ('credit_card', 'クレジットカード'), ('qr', 'バーコード(PayPay、auPay、wechat)'), ('kyokushin', '京交信'), ('omron', 'オムロン（愛のタクシーチケット）'), ('kyotoshi', '京都市他')], max_length=20, null=True, verbose_name='ETC收取方式')),
                ('etc_collected_cash', models.PositiveIntegerField(blank=True, null=True, verbose_name='ETC現金收取（円）')),
                ('etc_collected_app', models.PositiveIntegerField(blank=True, null=True, verbose_name='ETCアプリ収取（円）')),
                ('etc_uncollected', models.PositiveIntegerField(blank=True, help_text='日计账单中“空车合计”', null=True, verbose_name='ETC未收金额（円）')),
                ('etc_shortage', models.PositiveIntegerField(default=0, help_text='ETC使用金额超过应收金额的部分，将从工资中扣除', verbose_name='ETC不足额')),
                ('etc_note', models.CharField(blank=True, max_length=255, verbose_name='ETC备注')),
                ('gas_volume', models.DecimalField(decimal_places=2, default=0, max_digits=6, validators=[django.core.validators.MinValueValidator(0)], verbose_name='ガソリン量 (L)')),
                ('mileage', models.DecimalField(decimal_places=2, default=0, max_digits=7, validators=[django.core.validators.MinValueValidator(0)], verbose_name='里程 (KM)')),
                ('edited_at', models.DateTimeField(auto_now=True, help_text='自动记录最后保存时间', null=True, verbose_name='编辑时间')),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='daily_reports', to='staffbook.driver', verbose_name='司机')),
                ('edited_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='edited_dailyreports', to=settings.AUTH_USER_MODEL, verbose_name='编辑人')),
                ('vehicle', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='daily_reports', to='carinfo.car', verbose_name='本日使用车辆')),
            ],
            options={
                'verbose_name': '乘务日报',
                'verbose_name_plural': '乘务日报',
                'ordering': ['-date'],
                'unique_together': {('driver', 'date')},
            },
        ),
        migrations.CreateModel(
            name='DriverDailyReportItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ride_time', models.CharField(blank=True, max_length=30, verbose_name='乘车时间')),
                ('ride_from', models.CharField(blank=True, max_length=100, verbose_name='乘车地')),
                ('via', models.CharField(blank=True, max_length=100, verbose_name='経由')),
                ('ride_to', models.CharField(blank=True, max_length=100, verbose_name='降车地')),
                ('num_male', models.IntegerField(blank=True, null=True, verbose_name='男性')),
                ('num_female', models.IntegerField(blank=True, null=True, verbose_name='女性')),
                ('meter_fee', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, verbose_name='メータ料金')),
                ('is_charter', models.BooleanField(default=False)),
                ('payment_method', models.CharField(blank=True, choices=[('cash', '現金'), ('uber_cash', 'Uber（現金）'), ('uber', 'Uber'), ('didi_cash', 'Didi（現金）'), ('didi', 'Didi'), ('go_cash', 'GO（現金）'), ('go', 'GO'), ('credit_card', 'クレジットカード'), ('qr', 'バーコード(PayPay、auPay、wechat)'), ('kyokushin', '京交信'), ('omron', 'オムロン（愛のタクシーチケット）'), ('kyotoshi', '京都市他')], max_length=16, verbose_name='支付方式')),
                ('charter_payment_method', models.CharField(blank=True, choices=[('self_wechat', '司机微信/支付宝'), ('rmb_cash', '人民币现金'), ('jpy_cash', '日元现金'), ('to_company', '转付公司'), ('boss_wechat', '老板微信'), ('bank_transfer', '银行转账')], default='jpy_cash', max_length=20, null=True, verbose_name='貸切收款方式')),
                ('charter_amount_original', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='貸切原始金额（元/円）')),
                ('charter_exchange_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='換算汇率')),
                ('charter_amount_jpy', models.DecimalField(blank=True, decimal_places=0, max_digits=10, null=True, verbose_name='貸切日元金额')),
                ('note', models.CharField(blank=True, max_length=255, verbose_name='备注')),
                ('comment', models.TextField(blank=True, verbose_name='录入员注释')),
                ('is_flagged', models.BooleanField(default=False, verbose_name='标记为重点')),
                ('has_issue', models.BooleanField(default=False, verbose_name='是否异常')),
                ('combined_group', models.CharField(blank=True, max_length=100, null=True, verbose_name='合算グループ')),
                ('report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='dailyreport.driverdailyreport', verbose_name='所属日报')),
            ],
        ),
        migrations.CreateModel(
            name='DriverReportImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='日期')),
                ('image', models.ImageField(upload_to='report_images/', verbose_name='日报图片')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True, verbose_name='上传时间')),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='report_images', to='staffbook.driver')),
            ],
            options={
                'verbose_name': '日报图片',
                'verbose_name_plural': '日报图片',
                'ordering': ['-date'],
                'unique_together': {('driver', 'date')},
            },
        ),
    ]
