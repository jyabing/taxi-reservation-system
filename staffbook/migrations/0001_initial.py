# Generated by Django 5.1.2 on 2025-06-15 19:01

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='LicenseType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True, verbose_name='种类')),
                ('label', models.CharField(blank=True, max_length=32, verbose_name='显示名')),
            ],
        ),
        migrations.CreateModel(
            name='Driver',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('driver_code', models.CharField(max_length=20, unique=True, verbose_name='従業員番号')),
                ('name', models.CharField(max_length=32, verbose_name='氏名')),
                ('kana', models.CharField(max_length=32, verbose_name='フリガナ')),
                ('company', models.CharField(max_length=64, verbose_name='事業者名')),
                ('workplace', models.CharField(max_length=64, verbose_name='営業所名')),
                ('department', models.CharField(blank=True, max_length=32, verbose_name='部門')),
                ('position', models.CharField(choices=[('1', '常時選任運転者'), ('2', '運転者'), ('3', '職員'), ('4', '整備士')], max_length=32, verbose_name='職種')),
                ('employ_type', models.CharField(choices=[('1', '正式運転者'), ('2', '非常勤運転者')], max_length=20, verbose_name='在职类型')),
                ('appointment_date', models.DateField(blank=True, null=True, verbose_name='選任年月日')),
                ('hire_date', models.DateField(blank=True, null=True, verbose_name='入社年月日')),
                ('create_date', models.DateField(blank=True, null=True, verbose_name='作成年月日')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='生年月日')),
                ('gender', models.CharField(choices=[('男性', '男性'), ('女性', '女性'), ('未設定', '未設定')], default='未設定', max_length=8, verbose_name='性別')),
                ('blood_type', models.CharField(blank=True, choices=[('A', 'A'), ('B', 'B'), ('AB', 'AB'), ('O', 'O')], max_length=4, null=True, verbose_name='血液型')),
                ('postal_code', models.CharField(blank=True, max_length=16, null=True, verbose_name='郵便番号')),
                ('address', models.CharField(blank=True, max_length=128, null=True, verbose_name='住所')),
                ('phone_number', models.CharField(blank=True, max_length=32, null=True, verbose_name='電話番号')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='driver_photos/', verbose_name='写真')),
                ('photo_date', models.DateField(blank=True, null=True, verbose_name='撮影年月日')),
                ('health_insurance_no', models.CharField(blank=True, max_length=32, null=True, verbose_name='健康保険番号')),
                ('health_insurance_join_date', models.DateField(blank=True, null=True, verbose_name='健康保険加入日')),
                ('pension_no', models.CharField(blank=True, max_length=32, null=True, verbose_name='厚生年金保険番号')),
                ('pension_join_date', models.DateField(blank=True, null=True, verbose_name='厚生年金保険加入日')),
                ('employment_insurance_no', models.CharField(blank=True, max_length=32, null=True, verbose_name='雇用保険番号')),
                ('employment_insurance_join_date', models.DateField(blank=True, null=True, verbose_name='雇用保険加入日')),
                ('workers_insurance_no', models.CharField(blank=True, max_length=32, null=True, verbose_name='労災保険番号')),
                ('workers_insurance_join_date', models.DateField(blank=True, null=True, verbose_name='労災保険加入日')),
                ('pension_fund_no', models.CharField(blank=True, max_length=32, null=True, verbose_name='厚生年金基金番号')),
                ('pension_fund_join_date', models.DateField(blank=True, null=True, verbose_name='厚生年金基金加入日')),
                ('remark', models.CharField(blank=True, max_length=256, null=True, verbose_name='特記事項')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='driver_profile', to=settings.AUTH_USER_MODEL, verbose_name='绑定用户')),
            ],
            options={
                'verbose_name': '司机资料',
                'verbose_name_plural': '司机资料',
            },
        ),
        migrations.CreateModel(
            name='Accident',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('happened_at', models.DateField(verbose_name='发生日期')),
                ('description', models.CharField(max_length=100, verbose_name='简要说明')),
                ('penalty', models.CharField(blank=True, max_length=100, verbose_name='处理/处分')),
                ('note', models.CharField(blank=True, max_length=200, verbose_name='备注')),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='accidents', to='staffbook.driver', verbose_name='司机')),
            ],
            options={
                'verbose_name': '事故・違反',
                'verbose_name_plural': '事故・違反',
            },
        ),
        migrations.CreateModel(
            name='DriverDailyReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='日期')),
                ('note', models.TextField(blank=True, verbose_name='备注')),
                ('has_issue', models.BooleanField(default=False, verbose_name='包含异常记录')),
                ('edited_at', models.DateTimeField(blank=True, null=True, verbose_name='编辑时间')),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='daily_reports', to='staffbook.driver', verbose_name='司机')),
                ('edited_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='edited_dailyreports', to=settings.AUTH_USER_MODEL, verbose_name='编辑人')),
            ],
            options={
                'verbose_name': '乘务日报',
                'verbose_name_plural': '乘务日报',
                'ordering': ['-date'],
                'unique_together': {('driver', 'date')},
            },
        ),
        migrations.CreateModel(
            name='DriverDailyReportItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ride_time', models.CharField(blank=True, max_length=30, verbose_name='乘车时间')),
                ('ride_from', models.CharField(blank=True, max_length=100, verbose_name='乘车地')),
                ('via', models.CharField(blank=True, max_length=100, verbose_name='経由')),
                ('ride_to', models.CharField(blank=True, max_length=100, verbose_name='降车地')),
                ('num_male', models.IntegerField(default=0, verbose_name='男')),
                ('num_female', models.IntegerField(default=0, verbose_name='女')),
                ('meter_fee', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, verbose_name='メータ料金')),
                ('payment_method', models.CharField(blank=True, choices=[('cash', '现金'), ('uber', 'Uber'), ('didi', 'Didi'), ('credit', '信用卡'), ('ticket', '乘车券'), ('barcode', '扫码(PayPay/AuPay/支付宝/微信Pay等)')], max_length=16, verbose_name='支付方式')),
                ('note', models.CharField(blank=True, max_length=255, verbose_name='备注')),
                ('comment', models.TextField(blank=True, verbose_name='录入员注释')),
                ('has_issue', models.BooleanField(default=False, verbose_name='是否异常')),
                ('report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='staffbook.driverdailyreport', verbose_name='所属日报')),
            ],
        ),
        migrations.CreateModel(
            name='DrivingExperience',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vehicle_type', models.CharField(blank=True, max_length=30, verbose_name='车种')),
                ('years', models.IntegerField(blank=True, null=True, verbose_name='经验年数')),
                ('company', models.CharField(blank=True, max_length=50, verbose_name='经验公司')),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='driving_exp', to='staffbook.driver')),
            ],
        ),
        migrations.CreateModel(
            name='FamilyMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='家族姓名')),
                ('relation', models.CharField(max_length=10, verbose_name='关系')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='出生年月')),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='family_members', to='staffbook.driver')),
            ],
        ),
        migrations.CreateModel(
            name='Insurance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kind', models.CharField(max_length=20, verbose_name='保险种类')),
                ('join_date', models.DateField(blank=True, null=True, verbose_name='加入年月日')),
                ('number', models.CharField(blank=True, max_length=40, verbose_name='保险号')),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='insurances', to='staffbook.driver')),
            ],
        ),
        migrations.CreateModel(
            name='DriverLicense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='license_photos/', verbose_name='免许写真')),
                ('license_number', models.CharField(blank=True, max_length=32, verbose_name='免許証番号')),
                ('issue_date', models.DateField(blank=True, null=True, verbose_name='交付年月日')),
                ('expiry_date', models.DateField(blank=True, null=True, verbose_name='有効期限')),
                ('date_acquired_a', models.DateField(blank=True, null=True, verbose_name='二・小・原取得年月日')),
                ('date_acquired_b', models.DateField(blank=True, null=True, verbose_name='其他取得年月日')),
                ('date_acquired_c', models.DateField(blank=True, null=True, verbose_name='二種取得年月日')),
                ('license_conditions', models.CharField(blank=True, max_length=128, verbose_name='条件')),
                ('note', models.TextField(blank=True, verbose_name='備考')),
                ('driver', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='license', to='staffbook.driver')),
                ('license_types', models.ManyToManyField(blank=True, to='staffbook.licensetype', verbose_name='種\u3000類')),
            ],
        ),
        migrations.CreateModel(
            name='DriverDailySales',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='日期')),
                ('cash_amount', models.DecimalField(decimal_places=2, default=0, max_digits=8, verbose_name='现金')),
                ('card_amount', models.DecimalField(decimal_places=2, default=0, max_digits=8, verbose_name='刷卡')),
                ('ride_count', models.IntegerField(default=0, verbose_name='乘车次数')),
                ('mileage', models.DecimalField(decimal_places=1, default=0, max_digits=6, verbose_name='里程')),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='daily_sales', to='staffbook.driver')),
            ],
            options={
                'verbose_name': '司机日销售',
                'verbose_name_plural': '司机日销售',
                'ordering': ['-date'],
                'unique_together': {('driver', 'date')},
            },
        ),
        migrations.CreateModel(
            name='DriverPayrollRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month', models.DateField(verbose_name='月份')),
                ('total_sales', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='总业绩')),
                ('salary_paid', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='实发工资')),
                ('note', models.TextField(blank=True, verbose_name='备注')),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payroll_records', to='staffbook.driver')),
            ],
            options={
                'verbose_name': '工资记录',
                'verbose_name_plural': '工资记录',
                'ordering': ['-month'],
                'unique_together': {('driver', 'month')},
            },
        ),
        migrations.CreateModel(
            name='DriverReportImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='日期')),
                ('image', models.ImageField(upload_to='report_images/', verbose_name='日报图片')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True, verbose_name='上传时间')),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='report_images', to='staffbook.driver')),
            ],
            options={
                'verbose_name': '日报图片',
                'verbose_name_plural': '日报图片',
                'ordering': ['-date'],
                'unique_together': {('driver', 'date')},
            },
        ),
    ]
